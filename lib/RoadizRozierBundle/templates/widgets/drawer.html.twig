{% set entityIds = [] %}
{% set isSortable = isSortable|default('true') %}
{% for entity in value %}
    {% if entity is ContextualizedDocumentInterface %}
        {% set entityIds = entityIds|merge([{
            id: entity.id,
            document: entity.document.id,
            hotspot: entity.hotspot,
            imageCropAlignment: entity.imageCropAlignment
        }]) %}
    {% elseif entity.id is defined %}
        {% set entityIds = entityIds|merge([entity.id]) %}
    {% else %}
        {#
         # During **Form Errors**, entities are not transformed to ExplorerProviderItem.
         # We need to use directly data item as string.
         #}
        {% set entityIds = entityIds|merge([entity]) %}
    {% endif %}
{% endfor %}

{% set drawerAttributesWhitelist = [
    'data-field-group',
    'data-field-group-canonical',
    'data-dev-name',
] %}
{% set drawerAttributes = [] %}
{% for key, value in form.vars.attr %}
    {% if key in drawerAttributesWhitelist %}
        {% set drawerAttributes = drawerAttributes|merge([
            key ~ '="' ~ value|escape ~ '"'
        ]) %}
    {% endif %}
{% endfor %}
<div class="uk-form-row form-col-{{ name }} drawer-widget-wrapper" {{ drawerAttributes|join(' ')|raw }}>
    <drawer-container data-vuejs
                      inline-template
                      data-entity-name="{{ entityName }}"
                      data-locale="{{ form.vars._locale }}"
                      data-document-alignment-template-path="{{ path('documentsAlignmentTemplate') }}"
    >
        <div class="drawer-widget entity-{{ entity }}{%- if form.vars.help ?? false %} has-description{%- endif -%}"
             :class="{ 'uk-active' : isActive, 'uk-alert-danger': drawer.errorMessage }"
             v-if="drawer"
             ref="drawer"
            {{ widget_attributes|raw }}
            {% if entity %}data-accept-entity="{{ entity }}"{% endif %}
             data-entity-types="[]"
             data-is-sortable="{{ isSortable }}"
            {% if provider_class %}data-provider-class="{{ provider_class }}" {% endif %}
            {% if provider_options %}data-provider-options="{{ provider_options|json_encode }}" {% endif %}
             data-initial-items="{{ entityIds|json_encode }}">
            {% if label is empty -%}
                {% set label = name|humanize %}
            {%- endif -%}

            <nav class="drawer-widget-nav">
                <div class="drawer-widget-nav__head">
                    <div class="drawer-widget-nav__title"><i class="{{ icon }}"></i></div>
                    <div class="drawer-widget-nav__title label">
                        {{ label|trans }}
                        {% if isSortable == 'false' %}
                            <span class="uk-text-muted">{% trans %}drawer.sortable-not-enable{% endtrans %}</span>
                        {% endif %}
                        <span
                            class="uk-text-muted"
                            :class="{ 'uk-text-danger': items.length < this.drawer.minLength }"
                        >
                            <template v-if="this.drawer.maxLength < 9999">
                                ${ items.length } / ${ this.drawer.maxLength }
                            </template>
                            <template v-if="this.drawer.minLength > 0">
                                ({% trans %}min{% endtrans %}: ${ this.drawer.minLength })
                            </template>
                        </span>
                        {% if attr['data-universal'] %}
                            <i data-uk-tooltip="{animation:true}"
                               title="{% trans %}universal{% endtrans %}"
                               class="uk-icon uk-icon-flag universal-indicator"></i>
                        {% endif %}
                    </div>
                </div>
                <div class="drawer-widget-nav__content">
                    <div class="drawer-widget-quick-creation uk-button-group">
                        <rz-button :is-active="drawer.isActive"
                                   :callback="onExplorerButtonClick">
                            <i class="uk-icon-rz-explore"></i>
                            <span class="uk-hidden-small">
                            {%- trans -%}documents.toggle-explorer{%- endtrans -%}
                        </span>
                        </rz-button>
                        {% if enableDropzone %}
                            <rz-button :is-active="drawer.isDropzoneEnable"
                                       :callback="onDropzoneButtonClick">
                                <i class="uk-icon-rz-upload"></i>
                                <span class="uk-hidden-small">
                                {%- trans -%}documents.toggle-uploader{%- endtrans -%}
                            </span>
                            </rz-button>
                        {% endif %}
                    </div>
                </div>
            </nav>

            <template v-if="drawer.errorMessage">
                <p class="uk-text-danger">
                    ${ drawer.errorMessage }
                </p>
            </template>

            <div class="drawer-widget-sortable-container">
                <transition name="fade" v-if="drawer.isLoading">
                    <div class="spinner"></div>
                </transition>
                <ul class="drawer-widget-sortable"
                    data-input-name="{{ name }}">
                    <draggable
                        v-model="items"
                        :options="getOptions()"
                    >
                        <transition-group>
                            <component
                                v-bind:is="drawer.currentListingView"
                                v-for="(item, index) in items"
                                :key="(item.document) ? item.document.id : item.id"
                                :drawer-name="drawerName"
                                :is-item-explorer="false"
                                :add-item="addItem"
                                :remove-item="removeItem"
                                :index="index"
                                :item="item"
                                :entity-name="entityName"
                                @edit="onEditItem"
                            >
                            </component>
                        </transition-group>
                    </draggable>
                </ul>
            </div>
            {% if enableDropzone %}
                <dropzone v-if="drawer.isDropzoneEnable"
                          id="dropzone{{ random() }}"
                          :language="dropzoneLanguage"
                          url="{{ path('documentsUploadPage', {_format: 'json'}) }}"
                          v-on:vdropzone-error="showError"
                          v-on:vdropzone-success="showSuccess">
                </dropzone>
            {% endif %}
        </div>
    </drawer-container>
    {%- if form.vars.help ?? false -%}
        <small id="{{ form.vars.id }}_help" class="form-row-desc uk-form-label-description drawer-widget-description">{{- form.vars.help|trans|inlineMarkdown -}}</small>
    {%- endif -%}
</div>
