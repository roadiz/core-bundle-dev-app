class o extends HTMLElement{constructor(){super(),this.colorInput=null,this.toggleBtn=null,this.initializeColorInput=this.initializeColorInput.bind(this),this.toggleColorInput=this.toggleColorInput.bind(this)}connectedCallback(){this.colorInput=this.querySelector('input[type="color"]'),this.toggleBtn=this.querySelector("button.color-toggle-btn"),this.initializeColorInput()}initializeColorInput(){if(!this.colorInput||!this.toggleBtn)return;const t=this.getAttribute("data-initial-value");this.className="color-input-wrapper",t&&t!==""&&(this.classList.add("color-input-wrapper--defined"),this.style.setProperty("--color-input-value",t)),this.toggleColorInput(t),this.toggleBtn.addEventListener("click",()=>{this.toggleColorInput()}),this.colorInput.addEventListener("change",()=>{this.colorInput.value&&this.colorInput.value!==""?(this.style.setProperty("--color-input-value",this.colorInput.value),this.classList.add("color-input-wrapper--defined")):(this.style.removeProperty("--color-input-value"),this.classList.remove("color-input-wrapper--defined"))})}toggleColorInput(t=void 0){this.colorInput.type==="color"?(this.colorInput.type="text",this.toggleBtn.textContent=this.getAttribute("data-color-picker-label")):(this.colorInput.type="color",this.colorInput.value=t||this.colorInput.value||"#000000",this.toggleBtn.textContent=this.getAttribute("data-hex-color-label"))}}export{o as default};
