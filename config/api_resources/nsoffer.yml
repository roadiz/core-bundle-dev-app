App\GeneratedEntity\NSOffer:
    types:
        - Offer
    operations:
        ApiPlatform\Metadata\GetCollection:
            method: GET
            shortName: Offer
            normalizationContext:
                enable_max_depth: true
                groups:
                    - nodes_sources_base
                    - nodes_sources_default
                    - urls
                    - tag_base
                    - translation_base
                    - document_display
                    - document_thumbnails
                    - document_display_sources
        ApiPlatform\Metadata\Get:
            method: GET
            shortName: Offer
            normalizationContext:
                groups:
                    - nodes_sources
                    - urls
                    - tag_base
                    - translation_base
                    - document_display
                    - document_thumbnails
                    - document_display_sources
        getByPath:
            method: GET
            class: ApiPlatform\Metadata\Get
            uriTemplate: /web_response_by_path
            read: false
            controller: RZ\Roadiz\CoreBundle\Api\Controller\GetWebResponseByPathController
            normalizationContext:
                pagination_enabled: false
                enable_max_depth: true
                groups:
                    - nodes_sources
                    - urls
                    - tag_base
                    - translation_base
                    - document_display
                    - document_thumbnails
                    - document_display_sources
                    - web_response
                    - walker
                    - walker_level
                    - walker_metadata
                    - meta
                    - children
            openapiContext:
                tags:
                    - WebResponse
                summary: 'Get a resource by its path wrapped in a WebResponse object'
                description: 'Get a resource by its path wrapped in a WebResponse'
                parameters:
                    - { type: string, name: path, in: query, required: true, description: 'Resource path, or `/` for home page', schema: { type: string } }
