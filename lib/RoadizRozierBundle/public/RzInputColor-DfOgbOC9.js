class e extends HTMLElement{constructor(){super(),this.colorInput=null,this.toggleBtn=null,this.initialValue=null,this.toggleColorInput=this.toggleColorInput.bind(this)}connectedCallback(){if(this.colorInput=this.querySelector('input[type="color"]'),this.toggleBtn=this.querySelector(".color-toggle-btn"),!this.toggleBtn){console.warn("RzInputColor: Missing toggle button");return}if(!this.toggleBtn){console.warn("RzInputColor: Missing color input");return}this.initialValue=this.getAttribute("data-initial-value"),this.className="color-input-wrapper",this.initialValue&&this.initialValue!==""&&(this.classList.add("color-input-wrapper--defined"),this.style.setProperty("--color-input-value",this.initialValue)),this.toggleColorInput(),this.toggleBtn.addEventListener("click",this.toggleColorInput),this.colorInput.addEventListener("change",()=>{this.colorInput.value&&this.colorInput.value!==""?(this.style.setProperty("--color-input-value",this.colorInput.value),this.classList.add("color-input-wrapper--defined")):(this.style.removeProperty("--color-input-value"),this.classList.remove("color-input-wrapper--defined"))})}toggleColorInput(){if(this.colorInput){if(this.colorInput.type==="color"){this.colorInput.type="text",this.toggleBtn.textContent=this.getAttribute("data-color-picker-label");return}this.colorInput.type="color",this.colorInput.value=this.colorInput.value||this.initialValue||"#000000",this.toggleBtn.textContent=this.getAttribute("data-hex-color-label")}}}export{e as default};
