import{R as E}from"./RoadizElement-XU473doh.js";function u(m,t=3){const e=Math.pow(10,t);return Math.round(m*e)/e}class n extends E{static observedAttributes=["image-path","image-width","image-height"];static CSS_SELECTORS={IMAGE_WRAPPER:".document-alignment-widget__image-wrapper",AREA:".document-alignment-widget__area",HANDLES:".document-alignment-widget__handle",HOTSPOT:".document-alignment-widget__hotspot",RESET_BUTTON:".document-alignment-widget__reset",OVERRIDE_BUTTON:".document-alignment-widget__override",IMAGE:".document-alignment-widget__image"};static CSS_CLASSES={OVERRIDE_VISIBLE:"document-alignment-widget__override--visible",RESET_VISIBLE:"document-alignment-widget__reset--visible",HOTSPOT_GRABBING:"document-alignment-widget__hotspot--grabbing"};static CSS_PROPERTIES={AREA_TOP:"--document-alignment-widget-area-top",AREA_RIGHT:"--document-alignment-widget-area-right",AREA_BOTTOM:"--document-alignment-widget-area-bottom",AREA_LEFT:"--document-alignment-widget-area-left"};static DEFAULT_VALUES={HOTSPOT:{x:.5,y:.5},AREA:{areaStartX:0,areaStartY:0,areaEndX:1,areaEndY:1},MIN_SIZE:20};static CROP_ALIGNMENT_MAP={"top-left":{x:0,y:0},top:{x:.5,y:0},"top-right":{x:1,y:0},left:{x:0,y:.5},center:{x:.5,y:.5},right:{x:1,y:.5},"bottom-left":{x:0,y:1},bottom:{x:.5,y:1},"bottom-right":{x:1,y:1}};originalHotspot=null;hotspotOverridable=!1;isDraggingHandle=!1;isDraggingHotspot=!1;isDraggingArea=!1;cachedRects=new Map;imageWrapper=null;area=null;handles=null;hotspot=null;resetButton=null;overrideButton=null;overrideButtonInput=null;imageElement=null;handleDragProps=null;areaDragProps=null;pointerDownEvent=null;connectedCallback(){this.initializeOriginalHotspot(),this.initializeOverridableHotspot(),this.initializeElements(),this.updateImagePath(),this.setupOverrideHandling(),this.updateElements()}attributeChangedCallback(t){t==="image-path"?this.updateImagePath():t==="image-width"?this.updateImageWidth():t==="image-height"&&this.updateImageHeight()}initializeOriginalHotspot(){const t=this.getAttribute("original-hotspot");if(t)try{this.originalHotspot=JSON.parse(t)}catch(e){console.error("DocumentAlignmentWidget: Invalid original hotspot data:",e),this.originalHotspot=null}}initializeOverridableHotspot(){this.hotspotOverridable=!!this.getAttribute("hotspot-overridable")}setupOverrideHandling(){if(!this.hotspotOverridable||!this.overrideButton)return;const t=this.getStoredHotspotData();this.overrideButton.classList.add(n.CSS_CLASSES.OVERRIDE_VISIBLE),this.overrideButtonInput.checked=!!t,this.area.inert=!this.overrideButtonInput.checked,this.listen(this.overrideButtonInput,"change",this.onOverrideChange)}initializeElements(){const{CSS_SELECTORS:t}=n;if(this.imageWrapper=this.querySelector(t.IMAGE_WRAPPER),this.area=this.querySelector(t.AREA),this.handles=Array.from(this.querySelectorAll(t.HANDLES)),this.hotspot=this.querySelector(t.HOTSPOT),this.resetButton=this.querySelector(t.RESET_BUTTON),this.overrideButton=this.querySelector(t.OVERRIDE_BUTTON),this.overrideButtonInput=this.overrideButton?.querySelector("input"),!this.imageWrapper||!this.area||this.handles.length===0||!this.hotspot){console.error("DocumentAlignmentWidget: Missing required elements");return}this.listen(this.resetButton,"click",this.onResetClick),this.listen(this.area,"pointerdown",this.onAreaPointerDown,{passive:!1})}getImageElement(){return this.imageElement||(this.imageElement=this.querySelector(n.CSS_SELECTORS.IMAGE)),this.imageElement}updateImagePath(){const t=this.getImageElement();if(!t)return;const e=this.getAttribute("image-path");e&&t.src!==e&&(t.src=e)}updateImageWidth(){const t=this.getImageElement();if(!t)return;const e=this.getAttribute("image-width");e&&t.width!==e&&(t.width=e)}updateImageHeight(){const t=this.getImageElement();if(!t)return;const e=this.getAttribute("image-height");e&&t.height!==e&&(t.height=e)}updateElements(){const t=this.getStoredHotspotData();let e=t,i=!!t;this.hotspotOverridable&&(this.overrideButtonInput?.checked||(e=this.originalHotspot),i=this.overrideButtonInput?.checked&&!!t),this.setAreaPosition(e),this.setHotspotPosition(e),this.toggleResetButtonVisibility(i)}toggleResetButtonVisibility(t){this.resetButton?.classList.toggle(n.CSS_CLASSES.RESET_VISIBLE,t)}getInput(t){const e=this.getAttribute("input-base-name");return document.querySelector(`input[name="${e}[${t}]"]`)}moveArea({x:t,y:e,width:i,height:a}){let s=this.cachedRects.get("wrapper");s||(s=this.imageWrapper.getBoundingClientRect(),this.cachedRects.set("wrapper",s));const h=s.width,l=s.height;let r=Math.max(0,Math.min(t,h-i)),o=Math.max(0,Math.min(e,l-a)),g=Math.max(n.DEFAULT_VALUES.MIN_SIZE,i),c=Math.max(n.DEFAULT_VALUES.MIN_SIZE,a);r+g>h&&(g=h-r),o+c>l&&(c=l-o);const p={areaStartX:u(r/h),areaStartY:u(o/l),areaEndX:u((r+g)/h),areaEndY:u((o+c)/l)};this.setHotspotData(p),this.toggleResetButtonVisibility(!0),this.setAreaPosition(p)}setAreaPosition(t){const{CSS_PROPERTIES:e}=n;if(t){const{areaStartX:i,areaStartY:a,areaEndX:s,areaEndY:h}=t,l=(a||0)*100,r=(1-(s||1))*100,o=(1-(h||1))*100,g=(i||0)*100;this.imageWrapper.style.setProperty(e.AREA_TOP,`${l}%`),this.imageWrapper.style.setProperty(e.AREA_RIGHT,`${r}%`),this.imageWrapper.style.setProperty(e.AREA_BOTTOM,`${o}%`),this.imageWrapper.style.setProperty(e.AREA_LEFT,`${g}%`)}else this.imageWrapper.style.removeProperty(e.AREA_TOP),this.imageWrapper.style.removeProperty(e.AREA_RIGHT),this.imageWrapper.style.removeProperty(e.AREA_BOTTOM),this.imageWrapper.style.removeProperty(e.AREA_LEFT)}getHotspotFromImageCropAlignment(t){return n.CROP_ALIGNMENT_MAP[t]}moveHotspot(t,e){let i=this.cachedRects.get("area");i||(i=this.area.getBoundingClientRect(),this.cachedRects.set("area",i));let a=(t-i.left)/i.width,s=(e-i.top)/i.height;a=Math.max(0,Math.min(1,u(a))),s=Math.max(0,Math.min(1,u(s)));const h={x:a,y:s};this.setHotspotData(h),this.toggleResetButtonVisibility(!0),this.setHotspotPosition(h)}setHotspotPosition(t){this.hotspot&&(this.hotspot.style.top=typeof t?.y=="number"?`${t.y*100}%`:"",this.hotspot.style.left=typeof t?.x=="number"?`${t.x*100}%`:"")}getStoredHotspotData(){const t=this.getInput("hotspot")?.value;if(t&&t!=="null")try{const i=JSON.parse(t);if(i&&typeof i.x=="number"&&typeof i.y=="number")return i}catch(i){console.error("DocumentAlignmentWidget: Invalid stored hotspot data:",i)}const e=this.getInput("imageCropAlignment")?.value;return e?this.getHotspotFromImageCropAlignment(e):null}setHotspotData(t){const e=this.getInput("hotspot"),i=this.getInput("imageCropAlignment");if(e){let a={};try{a=JSON.parse(e.value||"{}")||{}}catch(h){console.error("DocumentAlignmentWidget: Invalid existing hotspot data:",h)}let s=null;t&&(s={...n.DEFAULT_VALUES.HOTSPOT,...a,...t}),e.value=JSON.stringify(s)}i&&i.value!==""&&(i.value="")}startDragHandle(t){const e=t.target,i=this.area.getBoundingClientRect(),a=this.area.parentElement.getBoundingClientRect();this.isDraggingHandle=!0,this.handleDragProps={startX:i.left-a.left,startY:i.top-a.top,startWidth:i.width,startHeight:i.height,handleIndex:this.handles.indexOf(e),parentRect:this.imageWrapper.getBoundingClientRect()},this.cachedRects.clear()}dragHandle(t){const{startX:e,startY:i,startWidth:a,startHeight:s,handleIndex:h,parentRect:l}=this.handleDragProps,r=t.clientX-l.left,o=t.clientY-l.top;let g=e,c=i,p=a,d=s;switch(h){case 0:p=a+(e-r),d=s+(i-o),g=r,c=o;break;case 1:d=s+(i-o),c=o;break;case 2:p=r-e,d=s+(i-o),c=o;break;case 3:p=a+(e-r),g=r;break;case 4:p=r-e;break;case 5:p=a+(e-r),g=r,d=o-i;break;case 6:d=o-i;break;case 7:p=r-e,d=o-i;break}p=Math.max(n.DEFAULT_VALUES.MIN_SIZE,p),d=Math.max(n.DEFAULT_VALUES.MIN_SIZE,d),this.moveArea({x:g,y:c,width:p,height:d})}stopDragHandle(){this.isDraggingHandle=!1}startDragHotspot(){this.isDraggingHotspot=!0,this.hotspot?.classList.add(n.CSS_CLASSES.HOTSPOT_GRABBING),this.cachedRects.clear()}dragHotspot(t){this.moveHotspot(t.clientX,t.clientY)}stopDragHotspot(){this.isDraggingHotspot=!1,this.hotspot?.classList.remove(n.CSS_CLASSES.HOTSPOT_GRABBING)}startDragArea(t){const e=this.area.getBoundingClientRect(),i=this.area.parentElement.getBoundingClientRect();this.isDraggingArea=!0,this.areaDragProps={startX:e.left-i.left,startY:e.top-i.top,startMouseX:t.clientX,startMouseY:t.clientY,areaWidth:e.width,areaHeight:e.height},this.cachedRects.clear()}dragArea(t){const{startX:e,startY:i,startMouseX:a,startMouseY:s,areaWidth:h,areaHeight:l}=this.areaDragProps,r=t.clientX-a,o=t.clientY-s,g=e+r,c=i+o;this.moveArea({x:g,y:c,width:h,height:l})}stopDragArea(){this.isDraggingArea=!1}onAreaPointerDown(t){const e=t.target;this.pointerDownEvent=t,t.preventDefault(),t.stopPropagation(),this.handles.includes(e)?this.startDragHandle(t):e===this.hotspot?this.startDragHotspot(t):(e===this.area||this.area.contains(e))&&this.startDragArea(t),this.listen(document,"pointermove",this.onPointerMove,{passive:!1}),this.listen(document,"pointerup",this.onPointerUp)}onPointerMove(t){t.preventDefault(),this.isDraggingHandle?this.dragHandle(t):this.isDraggingHotspot?this.dragHotspot(t):this.isDraggingArea&&this.dragArea(t)}onPointerUp(t){this.pointerDownEvent.clientX===t.clientX&&this.pointerDownEvent.clientY===t.clientY&&this.moveHotspot(t.clientX,t.clientY),this.pointerDownEvent=null,this.isDraggingHandle&&this.stopDragHandle(),this.isDraggingArea&&this.stopDragArea(),this.isDraggingHotspot&&this.stopDragHotspot(),this.unlisten(document,"pointermove",this.onPointerMove),this.unlisten(document,"pointerup",this.onPointerUp),this.cachedRects.clear()}onOverrideChange(t){const e=t.target.checked;if(this.area.inert=!e,!e)this.setHotspotData(null);else{const i={...n.DEFAULT_VALUES.HOTSPOT,...n.DEFAULT_VALUES.AREA};this.setHotspotData(this.originalHotspot||i)}this.updateElements()}onResetClick(){let t=null;this.hotspotOverridable&&(t={...n.DEFAULT_VALUES.HOTSPOT,...n.DEFAULT_VALUES.AREA}),this.setHotspotData(t),this.updateElements()}}export{n as default};
