name: roadiz-dev
services:
    db:
        build:
            target: mysql
            args:
                UID: ${UID:-1000}
        networks:
            - default
        volumes:
            - "./.data/db:/var/lib/mysql"
        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: 1
            MYSQL_DATABASE: ${MYSQL_DATABASE:-db_name}
            MYSQL_USER: ${MYSQL_USER:-db_user}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-db_password}

    db-test:
        build:
            target: mysql
            args:
                UID: ${UID:-1000}
        networks:
            - default
        volumes:
            - "./.data/db_test:/var/lib/mysql"
        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: 1
            MYSQL_DATABASE: ${MYSQL_TEST_DATABASE:-db_name_test}
            MYSQL_USER: ${MYSQL_USER:-db_user}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-db_password}

    pma:
        image: phpmyadmin:5.2.1
        environment:
            PMA_HOST: db
            UPLOAD_LIMIT: 64M
            PMA_USER: ${MYSQL_USER:-db_user}
            PMA_PASSWORD: ${MYSQL_PASSWORD:-db_password}
        depends_on:
            - db
        networks:
            - frontproxynet
            - default
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.${APP_NAMESPACE}_pma.loadbalancer.server.scheme=http"
            - "traefik.http.services.${APP_NAMESPACE}_pma.loadbalancer.server.port=80"
            - "traefik.http.services.${APP_NAMESPACE}_pma.loadbalancer.passhostheader=true"
            # Listen HTTP
            - "traefik.http.routers.${APP_NAMESPACE}_pma.entrypoints=http"
            - "traefik.http.routers.${APP_NAMESPACE}_pma.rule=Host(${HOSTNAME_PMA})"
            - "traefik.http.routers.${APP_NAMESPACE}_pma.service=${APP_NAMESPACE}_pma"

    solr:
        hostname: solr
        build:
            # Custom image for file permissions
            target: solr
            args:
                UID: ${UID:-1000}
        volumes:
            - "solr_data:/var/solr"
        command:
            - solr-precreate
            - ${SOLR_CORE_NAME}
        networks:
            - frontproxynet
            - default
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.${APP_NAMESPACE}_solr.loadbalancer.server.scheme=http"
            - "traefik.http.services.${APP_NAMESPACE}_solr.loadbalancer.server.port=8983"
            - "traefik.http.services.${APP_NAMESPACE}_solr.loadbalancer.passhostheader=true"
            # Listen HTTP
            - "traefik.http.routers.${APP_NAMESPACE}_solr.entrypoints=http"
            - "traefik.http.routers.${APP_NAMESPACE}_solr.rule=Host(${HOSTNAME_SOLR})"
            - "traefik.http.routers.${APP_NAMESPACE}_solr.service=${APP_NAMESPACE}_solr"

    redis:
        image: redis:7-alpine
        volumes:
            - "redis:/data"
        networks:
            - default

    app: &app_template
        hostname: app
        build:
            target: php-dev
            args:
                UID: ${UID:-1000}
        depends_on:
            - db
            - solr
            - redis
        volumes:
            - ./:/app:cached
            - ./docker/frankenphp/Caddyfile:/etc/caddy/Caddyfile:ro
            - ./docker/frankenphp/conf.d/app.dev.ini:/usr/local/etc/php/conf.d/app.dev.ini:ro
            - caddy_data:/data
            - caddy_config:/config
        networks:
            - default
        environment:
            PHP_CS_FIXER_IGNORE_ENV: 1
            TRUSTED_PROXIES: ${TRUSTED_PROXIES}
            UID: ${UID}
            DEFAULT_GATEWAY: ${DEFAULT_GATEWAY}
            DATABASE_URL: ${DATABASE_URL}
            MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
            MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}

    worker:
        <<: *app_template
        hostname: app-worker
        # Need to restart worker every 10 minutes
        restart: unless-stopped
        entrypoint: ["php", "/app/bin/console", "messenger:consume", "async", "--time-limit=600", "--profile"]

    cron:
        <<: *app_template
        build:
            target: cron-dev
            args:
                UID: ${UID:-1000}
        hostname: app-cron
        restart: unless-stopped

    mailer:
        hostname: mailer
        image: axllent/mailpit
        networks:
            - frontproxynet
            - default
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.${APP_NAMESPACE}_mailer.loadbalancer.server.scheme=http"
            - "traefik.http.services.${APP_NAMESPACE}_mailer.loadbalancer.server.port=8025"
            - "traefik.http.services.${APP_NAMESPACE}_mailer.loadbalancer.passhostheader=true"
            # Listen HTTP
            - "traefik.http.routers.${APP_NAMESPACE}_mailer.entrypoints=http"
            - "traefik.http.routers.${APP_NAMESPACE}_mailer.rule=Host(${HOSTNAME_MAILER})"
            - "traefik.http.routers.${APP_NAMESPACE}_mailer.service=${APP_NAMESPACE}_mailer"

networks:
    frontproxynet:
        external: true
    # If you need to use port forwarding, fixing default gateway can be useful
    # to keep same host IP address between service restarts
    default:
        ipam:
            driver: default
            config:
                -   subnet: ${DEFAULT_GATEWAY}/24

volumes:
    redis:
    solr_data:
    caddy_data:
    caddy_config:
