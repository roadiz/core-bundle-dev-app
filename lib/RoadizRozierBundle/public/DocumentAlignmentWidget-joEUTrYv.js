var R=Object.defineProperty;var H=(E,d,t)=>d in E?R(E,d,{enumerable:!0,configurable:!0,writable:!0,value:t}):E[d]=t;var o=(E,d,t)=>H(E,typeof d!="symbol"?d+"":d,t);import{R as f}from"./RoadizElement-XU473doh.js";function A(E,d=3){const t=Math.pow(10,d);return Math.round(E*t)/t}const r=class r extends f{constructor(){super(...arguments);o(this,"originalHotspot",null);o(this,"hotspotOverridable",!1);o(this,"isDraggingHandle",!1);o(this,"isDraggingHotspot",!1);o(this,"isDraggingArea",!1);o(this,"cachedRects",new Map);o(this,"imageWrapper",null);o(this,"area",null);o(this,"handles",null);o(this,"hotspot",null);o(this,"resetButton",null);o(this,"overrideButton",null);o(this,"overrideButtonInput",null);o(this,"imageElement",null);o(this,"handleDragProps",null);o(this,"areaDragProps",null);o(this,"pointerDownEvent",null)}connectedCallback(){this.initializeOriginalHotspot(),this.initializeOverridableHotspot(),this.initializeElements(),this.updateImagePath(),this.setupOverrideHandling(),this.updateElements()}attributeChangedCallback(t){t==="image-path"?this.updateImagePath():t==="image-width"?this.updateImageWidth():t==="image-height"&&this.updateImageHeight()}initializeOriginalHotspot(){const t=this.getAttribute("original-hotspot");if(t)try{this.originalHotspot=JSON.parse(t)}catch(e){console.error("DocumentAlignmentWidget: Invalid original hotspot data:",e),this.originalHotspot=null}}initializeOverridableHotspot(){this.hotspotOverridable=!!this.getAttribute("hotspot-overridable")}setupOverrideHandling(){if(!this.hotspotOverridable||!this.overrideButton)return;const t=this.getStoredHotspotData();this.overrideButton.classList.add(r.CSS_CLASSES.OVERRIDE_VISIBLE),this.overrideButtonInput.checked=!!t,this.area.inert=!this.overrideButtonInput.checked,this.listen(this.overrideButtonInput,"change",this.onOverrideChange)}initializeElements(){var e;const{CSS_SELECTORS:t}=r;if(this.imageWrapper=this.querySelector(t.IMAGE_WRAPPER),this.area=this.querySelector(t.AREA),this.handles=Array.from(this.querySelectorAll(t.HANDLES)),this.hotspot=this.querySelector(t.HOTSPOT),this.resetButton=this.querySelector(t.RESET_BUTTON),this.overrideButton=this.querySelector(t.OVERRIDE_BUTTON),this.overrideButtonInput=(e=this.overrideButton)==null?void 0:e.querySelector("input"),!this.imageWrapper||!this.area||this.handles.length===0||!this.hotspot){console.error("DocumentAlignmentWidget: Missing required elements");return}this.listen(this.resetButton,"click",this.onResetClick),this.listen(this.area,"pointerdown",this.onAreaPointerDown,{passive:!1})}getImageElement(){return this.imageElement||(this.imageElement=this.querySelector(r.CSS_SELECTORS.IMAGE)),this.imageElement}updateImagePath(){const t=this.getImageElement();if(!t)return;const e=this.getAttribute("image-path");e&&t.src!==e&&(t.src=e)}updateImageWidth(){const t=this.getImageElement();if(!t)return;const e=this.getAttribute("image-width");e&&t.width!==e&&(t.width=e)}updateImageHeight(){const t=this.getImageElement();if(!t)return;const e=this.getAttribute("image-height");e&&t.height!==e&&(t.height=e)}updateElements(){var a,s;const t=this.getStoredHotspotData();let e=t,i=!!t;this.hotspotOverridable&&((a=this.overrideButtonInput)!=null&&a.checked||(e=this.originalHotspot),i=((s=this.overrideButtonInput)==null?void 0:s.checked)&&!!t),this.setAreaPosition(e),this.setHotspotPosition(e),this.toggleResetButtonVisibility(i)}toggleResetButtonVisibility(t){var e;(e=this.resetButton)==null||e.classList.toggle(r.CSS_CLASSES.RESET_VISIBLE,t)}getInput(t){const e=this.getAttribute("input-base-name");return document.querySelector(`input[name="${e}[${t}]"]`)}moveArea({x:t,y:e,width:i,height:a}){let s=this.cachedRects.get("wrapper");s||(s=this.imageWrapper.getBoundingClientRect(),this.cachedRects.set("wrapper",s));const l=s.width,g=s.height;let n=Math.max(0,Math.min(t,l-i)),h=Math.max(0,Math.min(e,g-a)),p=Math.max(r.DEFAULT_VALUES.MIN_SIZE,i),m=Math.max(r.DEFAULT_VALUES.MIN_SIZE,a);n+p>l&&(p=l-n),h+m>g&&(m=g-h);const c={areaStartX:A(n/l),areaStartY:A(h/g),areaEndX:A((n+p)/l),areaEndY:A((h+m)/g)};this.setHotspotData(c),this.toggleResetButtonVisibility(!0),this.setAreaPosition(c)}setAreaPosition(t){const{CSS_PROPERTIES:e}=r;if(t){const{areaStartX:i,areaStartY:a,areaEndX:s,areaEndY:l}=t,g=(a||0)*100,n=(1-(s||1))*100,h=(1-(l||1))*100,p=(i||0)*100;this.imageWrapper.style.setProperty(e.AREA_TOP,`${g}%`),this.imageWrapper.style.setProperty(e.AREA_RIGHT,`${n}%`),this.imageWrapper.style.setProperty(e.AREA_BOTTOM,`${h}%`),this.imageWrapper.style.setProperty(e.AREA_LEFT,`${p}%`)}else this.imageWrapper.style.removeProperty(e.AREA_TOP),this.imageWrapper.style.removeProperty(e.AREA_RIGHT),this.imageWrapper.style.removeProperty(e.AREA_BOTTOM),this.imageWrapper.style.removeProperty(e.AREA_LEFT)}getHotspotFromImageCropAlignment(t){return r.CROP_ALIGNMENT_MAP[t]}moveHotspot(t,e){let i=this.cachedRects.get("area");i||(i=this.area.getBoundingClientRect(),this.cachedRects.set("area",i));let a=(t-i.left)/i.width,s=(e-i.top)/i.height;a=Math.max(0,Math.min(1,A(a))),s=Math.max(0,Math.min(1,A(s)));const l={x:a,y:s};this.setHotspotData(l),this.toggleResetButtonVisibility(!0),this.setHotspotPosition(l)}setHotspotPosition(t){this.hotspot&&(this.hotspot.style.top=typeof(t==null?void 0:t.y)=="number"?`${t.y*100}%`:"",this.hotspot.style.left=typeof(t==null?void 0:t.x)=="number"?`${t.x*100}%`:"")}getStoredHotspotData(){var i,a;const t=(i=this.getInput("hotspot"))==null?void 0:i.value;if(t&&t!=="null")try{const s=JSON.parse(t);if(s&&typeof s.x=="number"&&typeof s.y=="number")return s}catch(s){console.error("DocumentAlignmentWidget: Invalid stored hotspot data:",s)}const e=(a=this.getInput("imageCropAlignment"))==null?void 0:a.value;return e?this.getHotspotFromImageCropAlignment(e):null}setHotspotData(t){const e=this.getInput("hotspot"),i=this.getInput("imageCropAlignment");if(e){let a={};try{a=JSON.parse(e.value||"{}")||{}}catch(l){console.error("DocumentAlignmentWidget: Invalid existing hotspot data:",l)}let s=null;t&&(s={...r.DEFAULT_VALUES.HOTSPOT,...a,...t}),e.value=JSON.stringify(s)}i&&i.value!==""&&(i.value="")}startDragHandle(t){const e=t.target,i=this.area.getBoundingClientRect(),a=this.area.parentElement.getBoundingClientRect();this.isDraggingHandle=!0,this.handleDragProps={startX:i.left-a.left,startY:i.top-a.top,startWidth:i.width,startHeight:i.height,handleIndex:this.handles.indexOf(e),parentRect:this.imageWrapper.getBoundingClientRect()},this.cachedRects.clear()}dragHandle(t){const{startX:e,startY:i,startWidth:a,startHeight:s,handleIndex:l,parentRect:g}=this.handleDragProps,n=t.clientX-g.left,h=t.clientY-g.top;let p=e,m=i,c=a,u=s;switch(l){case 0:c=a+(e-n),u=s+(i-h),p=n,m=h;break;case 1:u=s+(i-h),m=h;break;case 2:c=n-e,u=s+(i-h),m=h;break;case 3:c=a+(e-n),p=n;break;case 4:c=n-e;break;case 5:c=a+(e-n),p=n,u=h-i;break;case 6:u=h-i;break;case 7:c=n-e,u=h-i;break}c=Math.max(r.DEFAULT_VALUES.MIN_SIZE,c),u=Math.max(r.DEFAULT_VALUES.MIN_SIZE,u),this.moveArea({x:p,y:m,width:c,height:u})}stopDragHandle(){this.isDraggingHandle=!1}startDragHotspot(){var t;this.isDraggingHotspot=!0,(t=this.hotspot)==null||t.classList.add(r.CSS_CLASSES.HOTSPOT_GRABBING),this.cachedRects.clear()}dragHotspot(t){this.moveHotspot(t.clientX,t.clientY)}stopDragHotspot(){var t;this.isDraggingHotspot=!1,(t=this.hotspot)==null||t.classList.remove(r.CSS_CLASSES.HOTSPOT_GRABBING)}startDragArea(t){const e=this.area.getBoundingClientRect(),i=this.area.parentElement.getBoundingClientRect();this.isDraggingArea=!0,this.areaDragProps={startX:e.left-i.left,startY:e.top-i.top,startMouseX:t.clientX,startMouseY:t.clientY,areaWidth:e.width,areaHeight:e.height},this.cachedRects.clear()}dragArea(t){const{startX:e,startY:i,startMouseX:a,startMouseY:s,areaWidth:l,areaHeight:g}=this.areaDragProps,n=t.clientX-a,h=t.clientY-s,p=e+n,m=i+h;this.moveArea({x:p,y:m,width:l,height:g})}stopDragArea(){this.isDraggingArea=!1}onAreaPointerDown(t){const e=t.target;this.pointerDownEvent=t,t.preventDefault(),t.stopPropagation(),this.handles.includes(e)?this.startDragHandle(t):e===this.hotspot?this.startDragHotspot(t):(e===this.area||this.area.contains(e))&&this.startDragArea(t),this.listen(document,"pointermove",this.onPointerMove,{passive:!1}),this.listen(document,"pointerup",this.onPointerUp)}onPointerMove(t){t.preventDefault(),this.isDraggingHandle?this.dragHandle(t):this.isDraggingHotspot?this.dragHotspot(t):this.isDraggingArea&&this.dragArea(t)}onPointerUp(t){this.pointerDownEvent.clientX===t.clientX&&this.pointerDownEvent.clientY===t.clientY&&this.moveHotspot(t.clientX,t.clientY),this.pointerDownEvent=null,this.isDraggingHandle&&this.stopDragHandle(),this.isDraggingArea&&this.stopDragArea(),this.isDraggingHotspot&&this.stopDragHotspot(),this.unlisten(document,"pointermove",this.onPointerMove),this.unlisten(document,"pointerup",this.onPointerUp),this.cachedRects.clear()}onOverrideChange(t){const e=t.target.checked;if(this.area.inert=!e,!e)this.setHotspotData(null);else{const i={...r.DEFAULT_VALUES.HOTSPOT,...r.DEFAULT_VALUES.AREA};this.setHotspotData(this.originalHotspot||i)}this.updateElements()}onResetClick(){let t=null;this.hotspotOverridable&&(t={...r.DEFAULT_VALUES.HOTSPOT,...r.DEFAULT_VALUES.AREA}),this.setHotspotData(t),this.updateElements()}};o(r,"observedAttributes",["image-path","image-width","image-height"]),o(r,"CSS_SELECTORS",{IMAGE_WRAPPER:".document-alignment-widget__image-wrapper",AREA:".document-alignment-widget__area",HANDLES:".document-alignment-widget__handle",HOTSPOT:".document-alignment-widget__hotspot",RESET_BUTTON:".document-alignment-widget__reset",OVERRIDE_BUTTON:".document-alignment-widget__override",IMAGE:".document-alignment-widget__image"}),o(r,"CSS_CLASSES",{OVERRIDE_VISIBLE:"document-alignment-widget__override--visible",RESET_VISIBLE:"document-alignment-widget__reset--visible",HOTSPOT_GRABBING:"document-alignment-widget__hotspot--grabbing"}),o(r,"CSS_PROPERTIES",{AREA_TOP:"--document-alignment-widget-area-top",AREA_RIGHT:"--document-alignment-widget-area-right",AREA_BOTTOM:"--document-alignment-widget-area-bottom",AREA_LEFT:"--document-alignment-widget-area-left"}),o(r,"DEFAULT_VALUES",{HOTSPOT:{x:.5,y:.5},AREA:{areaStartX:0,areaStartY:0,areaEndX:1,areaEndY:1},MIN_SIZE:20}),o(r,"CROP_ALIGNMENT_MAP",{"top-left":{x:0,y:0},top:{x:.5,y:0},"top-right":{x:1,y:0},left:{x:0,y:.5},center:{x:.5,y:.5},right:{x:1,y:.5},"bottom-left":{x:0,y:1},bottom:{x:.5,y:1},"bottom-right":{x:1,y:1}});let S=r;export{S as default};
